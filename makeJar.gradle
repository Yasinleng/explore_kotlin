def jarName = "pager"
def version = "1.0.0"
def name = jarName +"_"+version
def path="packaged-classes"

def root = ""


//Copy类型，请在Terminal中运行gradlew makeJar
task makeJar(type: Copy) {
    //删除存在的
    delete root+'libs/' + name+".jar"
    //设置拷贝的文件
    from(root+"build/intermediates/"+path+"/release")
    //打进jar包后的文件目录,将classes.jar放入build/libs/目录下
    into(root+'libs/')
    //要打包的jar文件
    include('classes.jar')
    //重命名
    rename('classes.jar', name + ".jar")
}
makeJar.dependsOn(build)

//-encoding UTF-8 -charset UTF-8
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

// 生成jar包的sourcesJar，不需要修改。
//task sourcesJar(type: Jar) {
//    from android.sourceSets.main.java.srcDirs
//    classifier = 'sources'
//    archiveName = name + '-sources.jar'
//}
//
////生成jarDoc的task，不需要修改。
//task javadoc(type: Javadoc) {
//    failOnError false
//    source = android.sourceSets.main.java.srcDirs
//    options.encoding = "UTF-8"
//    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
//    classpath += configurations.compile
//}
//
//// 生成javaDoc的jar，不需要修改。
//task javadocJar(type: Jar, dependsOn: javadoc) {
//    group = 'jar'
//    classifier = 'javadoc'
//    from javadoc.destinationDir
//    archiveName = name + '-javadoc.jar'
//}
//
//task generateJavadoc(type: Javadoc) {
//    source = android.sourceSets.main.java.srcDirs
//    ext.cp = android.libraryVariants.collect { variant ->
//        variant.javaCompile.classpath.files
//    }
//    classpath = files(ext.cp)
//}
//artifacts {
//    archives sourcesJar
//    archives javadocJar
//}